{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { ALL_PHONE, GET_PHONE, FILTRADO_NOMBRE, GET_PHONE_INFO } from \"../actions/actions\";\nvar inicialState = {\n  phones: [],\n  phoneFilter: [],\n  phone: [],\n  phoneInfo: []\n};\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inicialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === ALL_PHONE) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      phones: action.payload,\n      phoneFilter: action.payload\n    });\n  }\n\n  if (action.type === GET_PHONE) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      phone: action.payload\n    });\n  }\n\n  if (action.type === FILTRADO_NOMBRE) {\n    var phone = state.phoneFilter;\n    var nameFiltrado = phone.filter(function (el) {\n      if (el.brand_name.toString().toLowerCase().includes(action.payload.toLowerCase())) {\n        return el;\n      }\n    });\n    return _objectSpread(_objectSpread({}, state), {}, {\n      phones: nameFiltrado\n    });\n  }\n\n  if (action.type === GET_PHONE_INFO) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      phoneInfo: action.payload\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/teorkt/Escritorio/Celulares/Celulares/redux/reducers/reducers.js"],"names":["ALL_PHONE","GET_PHONE","FILTRADO_NOMBRE","GET_PHONE_INFO","inicialState","phones","phoneFilter","phone","phoneInfo","rootReducer","state","action","type","payload","nameFiltrado","filter","el","brand_name","toString","toLowerCase","includes"],"mappings":";;;;;;AAAA,SAAQA,SAAR,EAAmBC,SAAnB,EAA8BC,eAA9B,EAA+CC,cAA/C;AAGA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,WAAW,EAAE,EAFI;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,SAAS,EAAC;AAJO,CAArB;;AAOA,SAASC,WAAT,GAAkD;AAAA,MAA7BC,KAA6B,uEAArBN,YAAqB;AAAA,MAAPO,MAAO;;AAC9C,MAAGA,MAAM,CAACC,IAAP,KAAgBZ,SAAnB,EAA6B;AACzB,2CACOU,KADP;AAEIL,MAAAA,MAAM,EAAEM,MAAM,CAACE,OAFnB;AAGIP,MAAAA,WAAW,EAAEK,MAAM,CAACE;AAHxB;AAMH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgBX,SAAnB,EAA6B;AACzB,2CACOS,KADP;AAEIH,MAAAA,KAAK,EAAEI,MAAM,CAACE;AAFlB;AAIH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAgBV,eAAnB,EAAmC;AAC/B,QAAMK,KAAK,GAAGG,KAAK,CAACJ,WAApB;AACA,QAAMQ,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAa,UAACC,EAAD,EAAQ;AACtC,UAAGA,EAAE,CAACC,UAAH,CAAcC,QAAd,GAAyBC,WAAzB,GAAuCC,QAAvC,CAAgDT,MAAM,CAACE,OAAP,CAAeM,WAAf,EAAhD,CAAH,EAAiF;AAC7E,eAAOH,EAAP;AACH;AACJ,KAJoB,CAArB;AAMA,2CACON,KADP;AAEIL,MAAAA,MAAM,EAAES;AAFZ;AAIH;;AACD,MAAGH,MAAM,CAACC,IAAP,KAAgBT,cAAnB,EAAkC;AAC9B,2CACOO,KADP;AAEIF,MAAAA,SAAS,EAAEG,MAAM,CAACE;AAFtB;AAIH;;AACD,SAAOH,KAAP;AAEH;;AAED,eAAeD,WAAf","sourcesContent":["import {ALL_PHONE, GET_PHONE, FILTRADO_NOMBRE, GET_PHONE_INFO} from \"../actions/actions\";\n\n\nconst inicialState = {\n    phones: [],\n    phoneFilter: [],\n    phone: [],\n    phoneInfo:[]\n}\n\nfunction rootReducer(state = inicialState, action){\n    if(action.type === ALL_PHONE){\n        return{\n            ...state,\n            phones: action.payload,\n            phoneFilter: action.payload\n            \n        }\n    }   \n    if(action.type === GET_PHONE){\n        return{\n            ...state,\n            phone: action.payload,\n        }\n    }\n    if(action.type === FILTRADO_NOMBRE){\n        const phone = state.phoneFilter;\n        const nameFiltrado = phone.filter((el) => {\n            if(el.brand_name.toString().toLowerCase().includes(action.payload.toLowerCase())){\n                return el;\n            }\n        }) \n     \n        return{\n            ...state,\n            phones: nameFiltrado,\n        }\n    }\n    if(action.type === GET_PHONE_INFO){\n        return{\n            ...state,\n            phoneInfo: action.payload\n        }\n    }\n    return state\n    \n}\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}