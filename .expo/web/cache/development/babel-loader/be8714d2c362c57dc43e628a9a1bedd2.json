{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { allCharacter } from \"../../redux/actions/actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Cards() {\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(allCharacter());\n  }, [dispatch]);\n  var characters = useSelector(function (state) {\n    return state.character;\n  });\n  return _jsx(View, {\n    children: characters.map(function (phones) {\n      return _jsx(View, {\n        children: _jsx(Text, {\n          children: phones.species\n        })\n      }, phones.name);\n    })\n  });\n}","map":{"version":3,"sources":["/home/teorkt/Escritorio/Celulares/Celulares/components/cards/cards.jsx"],"names":["React","useEffect","useSelector","useDispatch","allCharacter","Cards","dispatch","characters","state","character","map","phones","species","name"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT;;AACA,eAAe,SAASC,KAAT,GAAiB;AAC5B,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAI;AACVK,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACH,GAFQ,EAEP,CAACE,QAAD,CAFO,CAAT;AAIA,MAAMC,UAAU,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,SAAjB;AAAA,GAAD,CAA9B;AAEA,SACI,KAAC,IAAD;AAAA,cAEQF,UAAU,CAACG,GAAX,CAAe,UAAAC,MAAM,EAAI;AACrB,aACI,KAAC,IAAD;AAAA,kBACI,KAAC,IAAD;AAAA,oBAAOA,MAAM,CAACC;AAAd;AADJ,SAAWD,MAAM,CAACE,IAAlB,CADJ;AAKH,KAND;AAFR,IADJ;AAaH","sourcesContent":["import React, {useEffect} from 'react';\nimport { View, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { allCharacter } from '../../redux/actions/actions';\nexport default function Cards() {\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        dispatch(allCharacter())\n    },[dispatch])\n\n    const characters = useSelector((state) => state.character );\n\n    return (\n        <View>\n            {\n                characters.map(phones => {\n                    return (\n                        <View key={phones.name}>\n                            <Text>{phones.species}</Text>\n                        </View>\n                    )\n                })\n            }\n        </View>\n    );\n}"]},"metadata":{},"sourceType":"module"}