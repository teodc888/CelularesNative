{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { ALL_CHARACTER } from \"../actions/actions\";\nvar initialState = {\n  character: []\n};\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === ALL_CHARACTER) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      character: action.payload\n    });\n  }\n\n  return state;\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["/home/teorkt/Escritorio/Celulares/Celulares/redux/reducers/reducers.js"],"names":["ALL_CHARACTER","initialState","character","rootReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,aAAR;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AADM,CAArB;;AAIA,SAASC,WAAT,GAAkD;AAAA,MAA7BC,KAA6B,uEAArBH,YAAqB;AAAA,MAAPI,MAAO;;AAC9C,MAAGA,MAAM,CAACC,IAAP,KAAgBN,aAAnB,EAAiC;AAC7B,2CACOI,KADP;AAEIF,MAAAA,SAAS,EAAEG,MAAM,CAACE;AAFtB;AAIH;;AACD,SAAOH,KAAP;AACH;;AAED,eAAeD,WAAf","sourcesContent":["import {ALL_CHARACTER}  from \"../actions/actions\"\n\nconst initialState = {\n    character: []\n};\n\nfunction rootReducer(state = initialState, action){\n    if(action.type === ALL_CHARACTER){  \n        return {\n            ...state,\n            character: action.payload\n        }\n    }\n    return state;\n}\n\nexport default rootReducer;\n\n"]},"metadata":{},"sourceType":"module"}